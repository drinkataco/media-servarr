# Default library values
nameOverride: ''
fullnameOverride: ''

#
# Secrets to create
#
secrets:
  - name: 'apiKey'
    value: ''

#
# Application Config
#
application:
  # Main application web UI port
  port: 9696
  # Access url base
  urlBase: 'prowlarr'
  # ConfigMap for core application settings
  config:
    # Filename of configuration
    filename: 'config.xml'
    # Configuration file contents
    contents: |
      <Config>
        <LogLevel>info</LogLevel>
        <EnableSsl>False</EnableSsl>
        <Port>9696</Port>
        <UrlBase>prowlarr</UrlBase>
        <BindAddress>*</BindAddress>
        <ApiKey>$apiKey</ApiKey>
        <AnalyticsEnabled>False</AnalyticsEnabled>
        <AuthenticationMethod>External</AuthenticationMethod>
        <UpdateMechanism>Docker</UpdateMechanism>
        <Branch>main</Branch>
        <InstanceName>Prowlarr</InstanceName>
      </Config>
    # Secrets to inject - if any - to the config. In the config they must be defined as $secret
    secrets: [ 'apiKey' ]
    # Path the file will be mounted to in the config
    mountPath: '/config/config.xml'

#
# Resource - DEPLOYMENT
# This is to set up and define the application deployment
#
deployment:
  container:
    image:
      repository: 'lscr.io/linuxserver/prowlarr'

    env:
      - name: 'PGID'
        value: '1000'
      - name: 'PUID'
        value: '1000'

    # Additional volumeMounts on the output Deployment definition.
    volumeMounts:
      - name: 'config'
        mountPath: '/config'

  volumes:
    config:
      persistentVolumeClaim:
        claimName: 'prowlarr-config'

persistentVolumeClaims:
  prowlarr-config:
    accessMode: 'ReadWriteOnce'
    requestStorage: '1Gi'
    selector: {}

ingress:
  enabled: true

metrics:
  enabled: true
  app: 'prowlarr'
  port:
    number: 9703
  env:
    # - name: 'PROWLARR__BACKFILL'
    #   value: 'true'
